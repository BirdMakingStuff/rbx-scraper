{
    "Heading.CreateDeveloperProduct": "Create a Developer Product",
    "Message.CreateDeveloperProductInfo": "Developer products are items which players can buy more than once, making them perfect for in-experience currency, ammo, or similar purchases. ",
    "Action.CreateDeveloperProduct": "Create Developer Product",
    "Label.Name": "Name",
    "Label.Description": "Description",
    "Label.PriceInRobux": "Price in Robux",
    "Message.DeveloperProductCreationSuccess": "Developer product created",
    "Label.BasicSettings": "Basic Settings",
    "Action.SaveChanges": "Save Changes",
    "Error.Required": "This is required!",
    "Error.Submit": "Save developer products changes failed. Try again.",
    "Error.InvalidProductId": "Product not found.",
    "Error.UnauthorizedProductAccess": "Product is created by another user.",
    "Error.InvalidDeveloperProductId": "Developer product not found.",
    "Error.DuplicateProductName": "Developer product name already exists in the universe.",
    "Error.InvalidUniverseId": "Universe not found.",
    "Error.UnauthorizedUniverseAccess": "User doesn't have access to universe.",
    "Error.InvalidShopId": "Shop id not found",
    "Error.UnknownError": "Unknown error occurred.",
    "Error.InvalidPriceInRobux": "Price in Robux cannot be negative, 0, or greater than 1 billion.",
    "Error.InvalidPostBody": "The post body was not found or failed to parse.",
    "Error.TooManyRequests": "Too many requests made in a short time. Wait for a little bit and try again.",
    "Message.DeveloperProductUpdateSuccess": "Developer product updated successfully",
    "Error.InvalidNumber": "Not a valid number",
    "Error.ImageUploadGenericError": "Image upload failed",
    "Error.DeveloperProductCreatedImageUploadFailed": "Developer product created, but image upload failed. Please retry on the configure page.",
    "ErrorImageUpload.Internal": "Image Upload failed with an internal error. Please check the console or the network tab for more information.",
    "ErrorImageUpload.Unknown": "Image upload failed with an unknown error. If this continues please reach out on the Developer Forum.",
    "ErrorImageUpload.InvalidImageFile": "The image file was invalid. We currently support jpg, bmp, and png files.",
    "ErrorImageUpload.UnauthorizedAccess": "You are not authorized to access one of the requested resources.",
    "ErrorImageUpload.NotAuthenticated": "You are not authenticated. Please login and try again.",
    "ErrorImageUpload.NotFound": "The requested resource was not found. Please make sure it exists and try again.",
    "ErrorImageUpload.BadRequest": "The request was malformed. Please see the network tab for more details.",
    "Error.DeveloperProductCreatedImageUploadFailedWithReason": "Developer Product created, but image upload failed with reason: {reason}. Please retry on the Configure page.",
    "Error.ImageUploadFailedOtherFieldsSucceeded": "Image upload failed, but the other fields were updated successfully.",
    "ErrorImageUpload.InternalAssetUploadFailed": "Failed to create Image asset. Please try again later.",
    "ErrorImageUpload.InternalAssetUploadTookTooLong": "Image asset took too long to create. Please try again later.",
    "Error.UnsupportedDeveloperProductUpdate": "Updates for this developer product are not supported.",
    "Error.ThumbnailRequiredForDetailsPage": "An image thumbnail is required when selling a product on the Experience Details Store. Add an image to save changes.",
    "Heading.ExternalPurchaseSettings": "External Purchase Settings",
    "Description.ExternalPurchaseSettingsSubtitle": "Sell your developer products outside of your experience.",
    "Heading.ValidateInTestMode": "Validate in Test Mode",
    "Description.ValidateInTestModeAlertText": "Before you can activate the feature, you must first validate that it works in Test Mode. {lineBreak}See {linkStart}Developer Products{linkEnd} for more information.",
    "Heading.TestMode": "Test Mode",
    "Description.TestModeSubtitle": "Before enabling external purchases, make sure you have the proper implementation of the {linkStart}ProcessReceipt API{linkEnd} in your experience.",
    "Heading.TestModeInstructions": "Test Mode Instructions",
    "Heading.TestModeInstruction1": "Turn on Test Mode and enable developer product(s) for testing",
    "Message.TestModeInstruction1": "Turn on Test Mode by clicking {boldStart}Enable Test Mode{boldEnd} below. Go to the settings page of the developer product you want to test and select {boldStart}Allow External Purchases{boldEnd}.",
    "Heading.TestModeInstruction2": "Purchase the test product",
    "Message.TestModeInstruction2": "Go to the experience detail page and purchase the test item.",
    "Heading.TestModeInstruction3": "Validate that the purchased product has been granted inside the experience",
    "Message.TestModeInstruction3": "You should receive the item when you enter the experience. The item receipt status should update to {boldStart}Closed{boldEnd}.",
    "Heading.TestModeInstruction4": "Roblox verifies that Test Mode has been completed",
    "Message.TestModeInstruction4": "External purchases become available after Test Mode is verified.",
    "Heading.FeatureActivation": "Feature Activation",
    "Label.ExternalPurchases": "External Purchases",
    "Label.ExternalPurchasesInvalidTooltip": "This feature is only available after you complete Test Mode",
    "Description.ExternalPurchasesSwitchExplanation": "Activating this feature lets you sell developer products on the experience details page.",
    "Label.EnableTestMode": "Enable Test Mode",
    "Label.DisableTestMode": "Disable Test Mode",
    "Label.ShowTestModeSettings": "Show Test Mode settings",
    "Label.HideTestModeSettings": "Hide Test Mode settings",
    "Label.BackToDeveloperProducts": "Back to Developer Products",
    "Heading.TestModeIsActive": "Test Mode is active",
    "Message.TestModeIsActive": "You are now able to test purchasing developer products on the experience detail page.",
    "Label.Continue": "Continue",
    "Description.TestModeInstructionWarning": "Items for sale in test mode cost actual Robux. We recommend testing low-cost developer products."
}